// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: moderation.proto

#include "moderation.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace moderation {
PROTOBUF_CONSTEXPR ModerateObjectRequest::ModerateObjectRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModerateObjectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModerateObjectRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModerateObjectRequestDefaultTypeInternal() {}
  union {
    ModerateObjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModerateObjectRequestDefaultTypeInternal _ModerateObjectRequest_default_instance_;
PROTOBUF_CONSTEXPR ModerateObjectResponse::ModerateObjectResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModerateObjectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModerateObjectResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModerateObjectResponseDefaultTypeInternal() {}
  union {
    ModerateObjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModerateObjectResponseDefaultTypeInternal _ModerateObjectResponse_default_instance_;
}  // namespace moderation
static ::_pb::Metadata file_level_metadata_moderation_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_moderation_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_moderation_2eproto = nullptr;

const uint32_t TableStruct_moderation_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::moderation::ModerateObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::moderation::ModerateObjectRequest, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::moderation::ModerateObjectRequest, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::moderation::ModerateObjectRequest, _impl_.text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::moderation::ModerateObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::moderation::ModerateObjectResponse, _impl_.success_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::moderation::ModerateObjectRequest)},
  { 9, -1, -1, sizeof(::moderation::ModerateObjectResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::moderation::_ModerateObjectRequest_default_instance_._instance,
  &::moderation::_ModerateObjectResponse_default_instance_._instance,
};

const char descriptor_table_protodef_moderation_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020moderation.proto\022\nmoderation\"W\n\025Modera"
  "teObjectRequest\022\n\n\002id\030\001 \001(\003\022$\n\004type\030\002 \001("
  "\0162\026.moderation.ObjectType\022\014\n\004text\030\003 \001(\t\""
  ")\n\026ModerateObjectResponse\022\017\n\007success\030\001 \001"
  "(\010*\203\001\n\nObjectType\022\033\n\027OBJECT_TYPE_UNSPECI"
  "FIED\020\000\022\037\n\033OBJECT_TYPE_MOD_DESCRIPTION\020\001\022"
  "\034\n\030OBJECT_TYPE_COMMENT_TEXT\020\002\022\031\n\025OBJECT_"
  "TYPE_USER_NAME\020\0032l\n\021ModerationService\022W\n"
  "\016ModerateObject\022!.moderation.ModerateObj"
  "ectRequest\032\".moderation.ModerateObjectRe"
  "sponseb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_moderation_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_moderation_2eproto = {
    false, false, 414, descriptor_table_protodef_moderation_2eproto,
    "moderation.proto",
    &descriptor_table_moderation_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_moderation_2eproto::offsets,
    file_level_metadata_moderation_2eproto, file_level_enum_descriptors_moderation_2eproto,
    file_level_service_descriptors_moderation_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_moderation_2eproto_getter() {
  return &descriptor_table_moderation_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_moderation_2eproto(&descriptor_table_moderation_2eproto);
namespace moderation {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ObjectType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_moderation_2eproto);
  return file_level_enum_descriptors_moderation_2eproto[0];
}
bool ObjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class ModerateObjectRequest::_Internal {
 public:
};

ModerateObjectRequest::ModerateObjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:moderation.ModerateObjectRequest)
}
ModerateObjectRequest::ModerateObjectRequest(const ModerateObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModerateObjectRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.type_));
  // @@protoc_insertion_point(copy_constructor:moderation.ModerateObjectRequest)
}

inline void ModerateObjectRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , decltype(_impl_.id_){int64_t{0}}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModerateObjectRequest::~ModerateObjectRequest() {
  // @@protoc_insertion_point(destructor:moderation.ModerateObjectRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModerateObjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
}

void ModerateObjectRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModerateObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:moderation.ModerateObjectRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModerateObjectRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .moderation.ObjectType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::moderation::ObjectType>(val));
        } else
          goto handle_unusual;
        continue;
      // string text = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "moderation.ModerateObjectRequest.text"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModerateObjectRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:moderation.ModerateObjectRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // .moderation.ObjectType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // string text = 3;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "moderation.ModerateObjectRequest.text");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:moderation.ModerateObjectRequest)
  return target;
}

size_t ModerateObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:moderation.ModerateObjectRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 3;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  // .moderation.ObjectType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModerateObjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModerateObjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModerateObjectRequest::GetClassData() const { return &_class_data_; }


void ModerateObjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModerateObjectRequest*>(&to_msg);
  auto& from = static_cast<const ModerateObjectRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:moderation.ModerateObjectRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModerateObjectRequest::CopyFrom(const ModerateObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:moderation.ModerateObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModerateObjectRequest::IsInitialized() const {
  return true;
}

void ModerateObjectRequest::InternalSwap(ModerateObjectRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModerateObjectRequest, _impl_.type_)
      + sizeof(ModerateObjectRequest::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(ModerateObjectRequest, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModerateObjectRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_moderation_2eproto_getter, &descriptor_table_moderation_2eproto_once,
      file_level_metadata_moderation_2eproto[0]);
}

// ===================================================================

class ModerateObjectResponse::_Internal {
 public:
};

ModerateObjectResponse::ModerateObjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:moderation.ModerateObjectResponse)
}
ModerateObjectResponse::ModerateObjectResponse(const ModerateObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModerateObjectResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:moderation.ModerateObjectResponse)
}

inline void ModerateObjectResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ModerateObjectResponse::~ModerateObjectResponse() {
  // @@protoc_insertion_point(destructor:moderation.ModerateObjectResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModerateObjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModerateObjectResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModerateObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:moderation.ModerateObjectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModerateObjectResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModerateObjectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:moderation.ModerateObjectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:moderation.ModerateObjectResponse)
  return target;
}

size_t ModerateObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:moderation.ModerateObjectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModerateObjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModerateObjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModerateObjectResponse::GetClassData() const { return &_class_data_; }


void ModerateObjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModerateObjectResponse*>(&to_msg);
  auto& from = static_cast<const ModerateObjectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:moderation.ModerateObjectResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModerateObjectResponse::CopyFrom(const ModerateObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:moderation.ModerateObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModerateObjectResponse::IsInitialized() const {
  return true;
}

void ModerateObjectResponse::InternalSwap(ModerateObjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModerateObjectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_moderation_2eproto_getter, &descriptor_table_moderation_2eproto_once,
      file_level_metadata_moderation_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace moderation
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::moderation::ModerateObjectRequest*
Arena::CreateMaybeMessage< ::moderation::ModerateObjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::moderation::ModerateObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::moderation::ModerateObjectResponse*
Arena::CreateMaybeMessage< ::moderation::ModerateObjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::moderation::ModerateObjectResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
